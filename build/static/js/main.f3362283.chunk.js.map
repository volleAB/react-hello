{"version":3,"sources":["assets/images/logo.svg","assets/images sync /^/.*$","assets/images/1.jpg","assets/images/10.jpg","assets/images/11.jpg","assets/images/12.jpg","assets/images/13.jpg","assets/images/14.jpg","assets/images/15.jpg","assets/images/16.jpg","assets/images/2.jpg","assets/images/3.jpg","assets/images/4.jpg","assets/images/5.jpg","assets/images/6.jpg","assets/images/7.jpg","assets/images/8.jpg","assets/images/9.jpg","components/imgFigure.js","components/controllerUnit.js","components/content.js","components/header.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","map","./1.jpg","./10.jpg","./11.jpg","./12.jpg","./13.jpg","./14.jpg","./15.jpg","./16.jpg","./2.jpg","./3.jpg","./4.jpg","./5.jpg","./6.jpg","./7.jpg","./8.jpg","./9.jpg","./logo.svg","webpackContext","req","id","webpackContextResolve","e","Error","code","keys","Object","resolve","ImgFigure","this","props","arrange","isCenter","inverse","center","stopPropagation","preventDefault","_this","styleObj","pos","rotate","transform","item","zIndex","ImgFigureClassName","isInverse","react_default","a","createElement","className","style","onClick","handleClick","bind","src","data","imageURL","alt","title","desc","Component","ControllerUnit","controllerUnitClassName","imageDatas","require","imageDatasArr","getRangeRandom","low","high","Math","ceil","random","get30DegRandom","Content","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","Constant","centerPos","left","right","hPosRange","leftSecX","rightSecX","y","vPosRange","x","topY","_iteratorNormalCompletion","_didIteratorError","_iteratorError","undefined","_step","_iterator","Symbol","iterator","next","done","singleImageData","value","fileName","push","err","return","state","imgsArrangeArr","top","stageDOM","ReactDOM","findDOMNode","refs","stage","stageW","scrollWidth","stageH","scrollHeight","halfStageW","halfStageH","imgFimgFigureDOM","imgFigure0","imgW","imgH","halfImgW","halfImgH","rearrange","index","setState","centerIndex","topImgSpliceIndex","hPosRangeLeftSecX","hPosRangeRightSecX","hPosRangeY","vPosRangeTopY","vPosRangeX","imgsArrangeTopArr","topImgNum","floor","imgsArrangeCenterArr","splice","length","forEach","i","j","k","hPosRangeLORX","controllerUnits","imgFigures","imgFigure","key","ref","controllerUnit","Header","logo","App","header","content","Boolean","window","location","hostname","match","render","src_App","name","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.f3362283.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.ee7cd8ed.svg\";","var map = {\n\t\"./1.jpg\": 21,\n\t\"./10.jpg\": 22,\n\t\"./11.jpg\": 23,\n\t\"./12.jpg\": 24,\n\t\"./13.jpg\": 25,\n\t\"./14.jpg\": 26,\n\t\"./15.jpg\": 27,\n\t\"./16.jpg\": 28,\n\t\"./2.jpg\": 29,\n\t\"./3.jpg\": 30,\n\t\"./4.jpg\": 31,\n\t\"./5.jpg\": 32,\n\t\"./6.jpg\": 33,\n\t\"./7.jpg\": 34,\n\t\"./8.jpg\": 35,\n\t\"./9.jpg\": 36,\n\t\"./logo.svg\": 7\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tvar id = map[req];\n\tif(!(id + 1)) { // check for number or string\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn id;\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 20;","module.exports = __webpack_public_path__ + \"static/media/1.468615a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/10.71fa48e8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/11.f5144aa9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/12.83069019.jpg\";","module.exports = __webpack_public_path__ + \"static/media/13.d98fbe8c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/14.0ef05b9c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/15.2e7a7479.jpg\";","module.exports = __webpack_public_path__ + \"static/media/16.c64fb0d3.jpg\";","module.exports = __webpack_public_path__ + \"static/media/2.6e4d001e.jpg\";","module.exports = __webpack_public_path__ + \"static/media/3.e34a1451.jpg\";","module.exports = __webpack_public_path__ + \"static/media/4.44c636b8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/5.6b0ba437.jpg\";","module.exports = __webpack_public_path__ + \"static/media/6.28f641b2.jpg\";","module.exports = __webpack_public_path__ + \"static/media/7.c713da41.jpg\";","module.exports = __webpack_public_path__ + \"static/media/8.6532c0b4.jpg\";","module.exports = __webpack_public_path__ + \"static/media/9.b3597f9e.jpg\";","import React, { Component } from 'react'\r\n\r\n// ----------添加图片组件，搭建图片结构\r\n\r\n/**\r\n * 函数式组件声明\r\n * @param {object} props \r\n */\r\n/** \r\nlet ImgFigure = (props) => {\r\n    return (\r\n        <figure className=\"img-figure\">\r\n            <img src={props.data.imageURL} alt={props.data.fileName}/>\r\n            <figcaption>\r\n                <h2 className=\"img-title\">{props.data.title}</h2>\r\n            </figcaption>\r\n        </figure>\r\n    )\r\n}\r\n*/\r\n\r\nclass ImgFigure extends Component{\r\n    /*\r\n     * figure的点击处理函数\r\n     * 如果是居中的图片，翻转\r\n     * 否则将图片设为居中\r\n     */\r\n    handleClick (e) {\r\n\r\n      if (this.props.arrange.isCenter) {\r\n        // 调用父组件的函数\r\n        this.props.inverse();\r\n      } else {\r\n        this.props.center();\r\n      }\r\n\r\n      e.stopPropagation()\r\n      e.preventDefault()\r\n    }\r\n  \r\n    render(){\r\n  \r\n      let styleObj = {}\r\n      /*\r\n       * 使用图片的位置信息\r\n       */\r\n      // 如果props属性中指定了这张图片的位置，则使用\r\n      if (this.props.arrange.pos){\r\n        styleObj = this.props.arrange.pos\r\n      }\r\n  \r\n      /*\r\n       * 图片的旋转\r\n       */\r\n      // 如果图片的旋转角度有值并且不为0，添加旋转角度。\r\n      // 兼容各种浏览器，浏览器前缀react写法参考：http://www.andismith.com/blog/2012/02/modernizr-prefixed/\r\n      // let \r\n      if (this.props.arrange.rotate) {\r\n        if(!styleObj.transform) {\r\n          ['MozTransform', 'msTransform', 'WebkitTransform', 'OTransform', 'transform'].map((item) => {\r\n            styleObj[item] = 'rotate(' + this.props.arrange.rotate + 'deg)'\r\n          })\r\n        }\r\n      }\r\n\r\n      // 方法二\r\n    //   if(this.props.arrange.rotate) {\r\n    //     (['MozTransform', 'msTransform', 'WebkitTransform', 'OTransform', 'transform']).forEach (function (value, index) {\r\n    //       styleObj[value] = `rotate(${this.props.arrange.rotate}deg)`;\r\n    //     }.bind(this))\r\n    //     console.log(styleObj)\r\n    //   }\r\n  \r\n      /*\r\n       * 居中图片z-index高于旁边的图片，低于controller-nav的。取11的一次方\r\n       */\r\n      if (this.props.arrange.isCenter) {\r\n        if(!styleObj.zIndex) {\r\n          styleObj.zIndex = 11\r\n        }\r\n      }\r\n  \r\n      // 用类名控制图片的翻转\r\n      let ImgFigureClassName = 'img-figure'\r\n      ImgFigureClassName += this.props.arrange.isInverse ? ' is-inverse' : ''  // 两个类名之间要有空格分隔，is-inverse前面注意有个空格\r\n  \r\n      return(\r\n        <figure className={ImgFigureClassName} style={styleObj} onClick={this.handleClick\r\n        .bind(this)}>\r\n          <img src={this.props.data.imageURL}\r\n               alt={this.props.data.title}\r\n          />\r\n          <figcaption>\r\n            <h2 className=\"img-title\">{this.props.data.title}</h2>\r\n            <div className=\"img-back\" onClick={this.handleClick.bind(this)}>\r\n              <p>\r\n                {this.props.data.desc}\r\n              </p>\r\n            </div>\r\n          </figcaption>\r\n        </figure>\r\n      );\r\n    }\r\n  }\r\n  \r\nexport default ImgFigure","import React, { Component } from 'react'\r\n\r\nclass ControllerUnit extends Component {\r\n  handleClick(e) {\r\n\r\n    //如果点击的是当前正在选中态的按钮，则翻转图片，否则将对应的图片居中\r\n    if(this.props.arrange.isCenter) {\r\n      this.props.inverse()\r\n    } else {\r\n      this.props.center()\r\n    }\r\n\r\n    e.preventDefault()\r\n    e.stopPropagation()\r\n  }\r\n  render() {\r\n    let controllerUnitClassName = 'controller-unit'\r\n\r\n    //如果对应的是居中的图片，显示控制按钮的居中态\r\n    if(this.props.arrange.isCenter) {\r\n      controllerUnitClassName += ' is-center'\r\n\r\n      //如果同时对应的是翻转图片，显示控制按钮的翻转态\r\n      if(this.props.arrange.isInverse) {\r\n        controllerUnitClassName += ' is-inverse'\r\n      }\r\n    }\r\n\r\n    return (\r\n      <span className={controllerUnitClassName} onClick={this.handleClick.bind(this)}></span>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ControllerUnit;","import React, { Component } from 'react'\r\nimport ReactDOM from 'react-dom'\r\nimport ImgFigure from './imgFigure'\r\nimport ControllerUnit from './controllerUnit'\r\n\r\nlet imageDatas = require('../assets/data/imageDatas.json')\r\nrequire('../assets/style/main.scss')\r\n\r\nlet imageDatasArr = []\r\n\r\n/**\r\n * 获取区间内的一个随机值\r\n * @param {Number} low 下限\r\n * @param {Number} high 上限\r\n */\r\nlet getRangeRandom = (low, high) => {\r\n    return Math.ceil(Math.random() * (high - low) + low)\r\n}\r\n\r\n/**\r\n * 获取 0~30° 之间的一个任意正负值\r\n */\r\nlet get30DegRandom = () =>  {\r\n    return ((Math.random() > 0.5? '' : '-') + Math.ceil(Math.random() * 30))\r\n}\r\n\r\nclass Content extends Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            title: 'Content',\r\n            imgsArrangeArr: [\r\n                {\r\n                    pos: {\r\n                        left: 0,\r\n                        top: 0\r\n                    },\r\n                    rotate: 0,   //旋转角度\r\n                    isInverse: false,\r\n                    isCenter: false\r\n                },\r\n            ]\r\n        }\r\n    }\r\n    Constant = {\r\n        centerPos: {\r\n            left: 0,\r\n            right: 0\r\n        },\r\n        hPosRange: {    //水平方向的取值范围\r\n            leftSecX: [0, 0],\r\n            rightSecX: [0, 0],\r\n            y: [0, 0]\r\n        },\r\n        vPosRange: {\r\n            x: [0, 0],\r\n            topY: [0, 0]\r\n        }\r\n    }\r\n    componentWillMount() {   //生命周期将要挂载\r\n        // this.setState({\r\n        //     imageDatasArr: imageDatas\r\n        // })\r\n    }\r\n    componentDidMount() {   //组件加载以后，为每张图片计算其位置的范围\r\n        \r\n        //首先拿到舞台的大小\r\n        let stageDOM = ReactDOM.findDOMNode(this.refs.stage),\r\n            stageW = stageDOM.scrollWidth,\r\n            stageH = stageDOM.scrollHeight,\r\n            halfStageW = Math.ceil(stageW / 2),\r\n            halfStageH = Math.ceil(stageH / 2)\r\n\r\n        //拿到一个imgeFigure的大小\r\n        let imgFimgFigureDOM = ReactDOM.findDOMNode(this.refs.imgFigure0),\r\n            imgW = imgFimgFigureDOM.scrollWidth,\r\n            imgH = imgFimgFigureDOM.scrollHeight,\r\n            halfImgW = Math.ceil(imgW / 2),\r\n            halfImgH = Math.ceil(imgH / 2)\r\n\r\n        // console.log([imgW, imgH])\r\n        // console.log([halfImgW, halfImgH, halfStageW])\r\n\r\n        //计算中心图片的位置点\r\n        this.Constant.centerPos = {\r\n            left: halfStageW - halfImgW,\r\n            top: halfStageH - halfImgH\r\n        }\r\n\r\n        // console.log(this.Constant.centerPos)\r\n\r\n        //计算左侧、右侧区域图片排布位置的取值范围\r\n        this.Constant.hPosRange.leftSecX[0] = -halfImgW\r\n        this.Constant.hPosRange.leftSecX[1] = halfStageW - halfImgW * 3\r\n\r\n        this.Constant.hPosRange.rightSecX[0] = halfStageW + halfImgW\r\n        this.Constant.hPosRange.rightSecX[1] = stageW - halfImgW\r\n        this.Constant.hPosRange.y[0] = -halfImgH\r\n        this.Constant.hPosRange.y[1] = stageH - halfImgH\r\n\r\n        //计算上侧区域图片排布位置的取值范围\r\n        this.Constant.vPosRange.topY[0] = -halfImgH\r\n        this.Constant.vPosRange.topY[1] = halfStageH - halfImgH * 3\r\n        this.Constant.vPosRange.x[0] = halfStageW - imgW\r\n        this.Constant.vPosRange.x[1] = halfStageW\r\n\r\n        this.rearrange(0)\r\n    }\r\n    /**\r\n     * 翻转图片\r\n     * @param index 输入当前被执行inverse操作的图片对应的图片信息数组的index值\r\n     * @return {Function} 这是一个闭包函数，其内return一个真正待被执行的函数\r\n     */\r\n    inverse(index) {\r\n        return function () {\r\n            let imgsArrangeArr = this.state.imgsArrangeArr\r\n\r\n            imgsArrangeArr[index].isInverse = !imgsArrangeArr[index].isInverse\r\n\r\n            this.setState({\r\n                imgsArrangeArr: imgsArrangeArr\r\n            })\r\n            // console.log(index)\r\n            // alert(this.state.title)\r\n        }.bind(this)\r\n    }\r\n\r\n    /**\r\n     * 利用rearrange函数，居中对应index的图片\r\n     * @param {Number} centerIndex 需要被居中的图片对应的图片信息数组的index值\r\n     */\r\n    center(index) {\r\n        return function () {\r\n            this.rearrange(index)\r\n        }.bind(this)\r\n    }\r\n\r\n    /**\r\n     * 利用自执行函数获取图片信息\r\n     */\r\n    imageDatas = (() => {\r\n        for(let item of imageDatas) {\r\n            let singleImageData = item\r\n            singleImageData.imageURL = require('../assets/images/' + singleImageData.fileName)\r\n            // console.log(singleImageData.imageURL)\r\n            imageDatasArr.push(singleImageData)\r\n        }\r\n    })(imageDatas)\r\n    /**\r\n     * 重新布局所有图片\r\n     * @param {Number} centerIndex 指定居中排布哪个图片\r\n     */\r\n    rearrange(centerIndex) {\r\n        let imgsArrangeArr = this.state.imgsArrangeArr,\r\n            Constant = this.Constant,\r\n            centerPos = Constant.centerPos,\r\n            hPosRange = Constant.hPosRange,\r\n            vPosRange = Constant.vPosRange,\r\n            hPosRangeLeftSecX = hPosRange.leftSecX,\r\n            hPosRangeRightSecX = hPosRange.rightSecX,\r\n            hPosRangeY = hPosRange.y,\r\n            vPosRangeTopY = vPosRange.topY,\r\n            vPosRangeX = vPosRange.x,\r\n\r\n            imgsArrangeTopArr = [],\r\n            topImgNum = Math.floor(Math.random() * 2),   //取一个或者不取\r\n            topImgSpliceIndex = 0,\r\n\r\n            imgsArrangeCenterArr = imgsArrangeArr.splice(centerIndex, 1)\r\n            // console.log(hPosRangeRightSecX)\r\n\r\n            //首先居中 centerIndex 的图片，居中图片不需要旋转\r\n            imgsArrangeCenterArr[0] = {\r\n                pos: centerPos,\r\n                rotate: 0,\r\n                isCenter: true\r\n            }\r\n\r\n            //取出要布局上侧的图片的状态信息\r\n            topImgSpliceIndex = Math.ceil(Math.random() * (imgsArrangeArr.length - topImgNum))\r\n            imgsArrangeTopArr = imgsArrangeArr.splice(topImgSpliceIndex, topImgNum)\r\n            // console.log(topImgNum)\r\n\r\n            //布局位于上侧的图片\r\n            imgsArrangeTopArr.forEach((value, index) => {\r\n                imgsArrangeTopArr[index] = {\r\n                    pos: {\r\n                        top: getRangeRandom(vPosRangeTopY[0], vPosRangeTopY[1]),\r\n                        left: getRangeRandom(vPosRangeX[0], vPosRangeX[1])\r\n                    },\r\n                    rotate: get30DegRandom(),\r\n                    isCenter: false\r\n                }\r\n            })\r\n\r\n            //布局左右两侧的图片\r\n            // console.log(imgsArrangeArr.length)\r\n            for(let i = 0, j = imgsArrangeArr.length, k = Math.floor(j / 2); i < j; i++) {\r\n                let hPosRangeLORX = null\r\n\r\n                if(i < k) {\r\n                    hPosRangeLORX = hPosRangeLeftSecX\r\n                } else {\r\n                    hPosRangeLORX = hPosRangeRightSecX\r\n                }\r\n\r\n                imgsArrangeArr[i] = {\r\n                    pos: {\r\n                        top: getRangeRandom(hPosRangeY[0], hPosRangeY[1]),\r\n                        left: getRangeRandom(hPosRangeLORX[0], hPosRangeLORX[1])\r\n                    },\r\n                    rotate: get30DegRandom(),\r\n                    isCenter: false\r\n                }\r\n\r\n                // console.log(i)\r\n            }\r\n\r\n            // debugger\r\n\r\n            if(imgsArrangeTopArr && imgsArrangeTopArr[0]) {\r\n                imgsArrangeArr.splice(topImgSpliceIndex, 0, imgsArrangeTopArr[0])\r\n            }\r\n\r\n            imgsArrangeArr.splice(centerIndex, 0, imgsArrangeCenterArr[0])\r\n\r\n            this.setState({\r\n                imgsArrangeArr: imgsArrangeArr\r\n            })\r\n    }\r\n    render() {\r\n        let controllerUnits = [],\r\n            imgFigures = []\r\n        // console.log(this.state.imgsArrangeArr)\r\n        // console.log('1')\r\n        imageDatas.forEach(function (value, index) {\r\n\r\n            if(!this.state.imgsArrangeArr[index]) {\r\n                this.state.imgsArrangeArr[index] = {\r\n                    pos: {\r\n                        left: 0,\r\n                        top: 0\r\n                    },\r\n                    rotate: 0,\r\n                    isInverse: false,\r\n                    isCenter: false\r\n                }\r\n            }\r\n\r\n            imgFigures.push(\r\n                <ImgFigure \r\n                    data={value} \r\n                    key={index} \r\n                    ref={\"imgFigure\" + index} \r\n                    arrange={this.state.imgsArrangeArr[index]} \r\n                    inverse={this.inverse(index)}\r\n                    center={this.center(index)}\r\n                />\r\n            )\r\n\r\n            controllerUnits.push(\r\n                <ControllerUnit\r\n                    key={index} \r\n                    arrange={this.state.imgsArrangeArr[index]}\r\n                    inverse={this.inverse(index)}\r\n                    center={this.center(index)}\r\n                />\r\n            )\r\n        }.bind(this))\r\n\r\n        return (\r\n            <div className=\"content\">\r\n                <section className=\"stage\" ref=\"stage\">\r\n                    <section className=\"img-sec\">\r\n                        {imgFigures}\r\n                    </section>\r\n                    <nav className=\"controller-nav\">\r\n                        {controllerUnits}\r\n                    </nav>\r\n                </section>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Content;","import React, { Component } from 'react'\r\nimport logo from '../assets/images/logo.svg'\r\nrequire ('../assets/style/main.scss')\r\n\r\nclass Header extends Component {\r\n    constructor() {\r\n        super()\r\n        this.state = {\r\n            title: 'Hello React'\r\n        }\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"header\">\r\n                <div className=\"header-left\">\r\n                    <img src={logo} alt=\"logo\"></img>\r\n                </div>\r\n                <div className=\"header-content\"><span>{this.state.title}</span></div>\r\n                <div className=\"header-right\"></div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Header","import React, { Component } from 'react'\r\nimport Content from './components/content'\r\nimport Header from './components/header'\r\nrequire ('./assets/style/common.scss')\r\n\r\nclass App extends Component {\r\n  constructor() {\r\n    super()\r\n    this.state = {\r\n      title: 'App'\r\n    }\r\n  }\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Header />\r\n        <Content value=\"content\" />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(<App name='Home' />, document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}